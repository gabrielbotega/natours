extends base

mixin navItem(link, text, icon, active)
    li(class=`${active ? "side-nav--active" : ""}`)
        a(href=`${link}`)
            svg
                use(xlink:href=`/img/icons.svg#icon-${icon}`)
            | #{text}


block content
    main.main
        .user-view
            nav.user-view__menu
                ul.side-nav
                    +navItem("#", "Settings", "settings", true)
                    +navItem("/my-tours", "My bookings", "briefcase", false)
                    +navItem("#", "My reviews", "star", false)
                    +navItem("#", "Billing", "credit-card", false)

                - if(user.role === "admin")
                    .admin-nav
                        h5.admin-nav__heading Admin
                        ul.side-nav
                            +navItem("#", "Manage tours", "map", false)
                            +navItem("#", "Manage users", "users", false)
                            +navItem("#", "Manage reviews", "star", false)
                            +navItem("#", "Manage bookings", "briefcase", false)

            .user-view__content
                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Your account settings

                    //-WITHOUT API
                    //-form.form.form-user-data(action="/submit-user-data" method="POST")
                    //- to send it directly from the UI, we need:
                    //- form.form.form-user-data(action="/submit-user-data" method="POST", enctype="multipart/form-data")
                    //- remember that multipart is always to send files to the server and we need the multer middleware to handle this multipart/form-data

                    //-WITH API
                    form.form.form-user-data
                        .form__group
                            label.form__label(for='name') Name
                            input#name.form__input(type='text', value=`${user.name}`, required, name="name")
                        .form__group.ma-bt-md
                            label.form__label(for='email') Email address
                            input#email.form__input(type='email', value=`${user.email}`, required, name="email")
                        .form__group.form__photo-upload
                            img.form__user-photo(src=`/img/users/${user.photo}`, alt='User photo')
                            input.form__upload(type="file", accept="image/*", id="photo", name="photo")
                            label(for="photo") Choose new photo
                        .form__group.right
                            button.btn.btn--small.btn--green Save settings

                .line &nbsp;
                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Password change
                    form.form.form-user-password
                        .form__group
                            label.form__label(for='password-current') Current password
                            input#password-current.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group
                            label.form__label(for='password') New password
                            input#password.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group.ma-bt-lg
                            label.form__label(for='password-confirm') Confirm password
                            input#password-confirm.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group.right
                            button.btn.btn--small.btn--green.btn--save--password Save password



//- There are two ways to get the data and update it: 1) First, through the form (action attribute); 2) POST method and using JS.
//- The first method is harder to deal with errors however it's important to know how to do it without an API, e.g.
//- 1) action="end-point", Method= POST. Therefore every time the btn gets clicked the data will be submitted using a post request to the endpoint specified
//- Then, there is a need to specify the name attribute of the input field we want to send -> their values will be sent with the request based on their name attribute
//- The name of the field in the body will be the one specified in the form
//- Another thing that should be noticed is that if I want to use the data from the body (req.body) using form I want to create another middleware - This will go in the app.js